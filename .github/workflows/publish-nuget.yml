name: Publish NuGet Packages (Disabled)

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version to publish'
        required: true
        default: '1.0.0'
      prerelease:
        description: 'Is this a prerelease?'
        required: false
        type: boolean
        default: false

jobs:
  publish-nuget:
    runs-on: ubuntu-latest
    if: false  # Disabled - functionality moved to ci-cd.yml
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Determine version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          VERSION="${{ github.event.release.tag_name }}"
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
        elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
          if [[ "${{ github.event.inputs.prerelease }}" == "true" ]]; then
            VERSION="${VERSION}-preview"
          fi
        else
          VERSION="1.0.0-preview.${GITHUB_RUN_NUMBER}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Publishing version: $VERSION"
        
    - name: Restore dependencies
      run: dotnet restore src --configfile nuget.config
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: ${{ github.actor }}
        
    - name: Build solution
      run: dotnet build src --configuration Release --no-restore /p:Version=${{ steps.version.outputs.VERSION }}
        
    - name: Pack Kafka.Connect.Plugin
      run: |
        cd src/Kafka.Connect.Plugin
        dotnet pack /p:Version=${{ steps.version.outputs.VERSION }} --configuration Release --no-build --no-restore --output ./nupkgs
        
    - name: Pack all Plugins
      run: |
        cd src/Plugins
        dotnet pack /p:Version=${{ steps.version.outputs.VERSION }} --configuration Release --no-build --no-restore --output ./nupkgs
        
    - name: Publish Kafka.Connect.Plugin to GitHub Packages
      run: |
        cd src/Kafka.Connect.Plugin
        dotnet nuget push ./nupkgs/Kafka.Connect.Plugin.${{ steps.version.outputs.VERSION }}.nupkg \
          --api-key ${{ secrets.GITHUB_TOKEN }} \
          --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json \
          --skip-duplicate
          
    - name: Publish all Plugins to GitHub Packages
      run: |
        cd src/Plugins
        for package in ./nupkgs/*.${{ steps.version.outputs.VERSION }}.nupkg; do
          echo "Publishing: $package"
          dotnet nuget push "$package" \
            --api-key ${{ secrets.GITHUB_TOKEN }} \
            --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json \
            --skip-duplicate
        done
        
    - name: Upload NuGet packages as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages-${{ steps.version.outputs.VERSION }}
        path: |
          src/Kafka.Connect.Plugin/nupkgs/*.nupkg
          src/Plugins/nupkgs/*.nupkg
        retention-days: 30