{
  "Logging": {
    "LogLevel": {
      "Default": "Debug",
      "Microsoft": "Information",
      "Microsoft.Hosting.Lifetime": "Information",
      "Kafka.Connect": "Trace",
      "Kafka.Connect.Tests": "Trace",
      "Testcontainers": "Information"
    }
  },
  "TestSettings": {
    "DefaultTimeout": "00:01:00",
    "ContainerStartupTimeout": "00:05:00",
    "DatabaseReadyTimeout": "00:02:00",
    "KafkaReadyTimeout": "00:02:00",
    "TestTopicPrefix": "integration-test-",
    "TestDatabasePrefix": "integration_test_",
    "CleanupAfterTests": true,
    "ParallelExecution": false,
    "RetryAttempts": 3,
    "RetryDelay": "00:00:05"
  },
  "Kafka": {
    "GroupId": "integration-test-group",
    "ClientId": "integration-test-client",
    "AutoOffsetReset": "Earliest",
    "EnableAutoCommit": false,
    "SessionTimeoutMs": 10000,
    "MaxPollIntervalMs": 600000,
    "MessageTimeoutMs": 30000,
    "RequestTimeoutMs": 30000,
    "MetadataMaxAgeMs": 300000
  },
  "MongoDB": {
    "DatabaseName": "integration_testdb",
    "Collections": {
      "TestCollection": "integration_test_collection",
      "UsersCollection": "integration_users",
      "OrdersCollection": "integration_orders",
      "ProductsCollection": "integration_products"
    },
    "TestData": {
      "SampleUsers": [
        {
          "id": "user1",
          "name": "John Doe",
          "email": "john.doe@example.com",
          "age": 30,
          "createdAt": "2024-01-01T00:00:00Z"
        },
        {
          "id": "user2",
          "name": "Jane Smith",
          "email": "jane.smith@example.com",
          "age": 25,
          "createdAt": "2024-01-02T00:00:00Z"
        }
      ]
    }
  },
  "PostgreSQL": {
    "Schema": "integration_test",
    "Tables": {
      "TestTable": "integration_test_table",
      "UsersTable": "integration_users",
      "OrdersTable": "integration_orders",
      "ProductsTable": "integration_products"
    },
    "TestData": {
      "CreateTables": [
        "CREATE SCHEMA IF NOT EXISTS integration_test;",
        "CREATE TABLE IF NOT EXISTS integration_test.integration_users (id VARCHAR(50) PRIMARY KEY, name VARCHAR(100), email VARCHAR(100), age INTEGER, created_at TIMESTAMP);",
        "CREATE TABLE IF NOT EXISTS integration_test.integration_orders (id VARCHAR(50) PRIMARY KEY, user_id VARCHAR(50), product_name VARCHAR(100), quantity INTEGER, price DECIMAL(10,2), order_date TIMESTAMP);"
      ],
      "SampleUsers": [
        {
          "id": "user1",
          "name": "John Doe",
          "email": "john.doe@example.com",
          "age": 30,
          "created_at": "2024-01-01T00:00:00Z"
        }
      ]
    }
  },
  "MySQL": {
    "Schema": "integration_testdb",
    "Tables": {
      "TestTable": "integration_test_table",
      "UsersTable": "integration_users",
      "OrdersTable": "integration_orders",
      "ProductsTable": "integration_products"
    },
    "TestData": {
      "CreateTables": [
        "CREATE TABLE IF NOT EXISTS integration_users (id VARCHAR(50) PRIMARY KEY, name VARCHAR(100), email VARCHAR(100), age INTEGER, created_at TIMESTAMP);",
        "CREATE TABLE IF NOT EXISTS integration_orders (id VARCHAR(50) PRIMARY KEY, user_id VARCHAR(50), product_name VARCHAR(100), quantity INTEGER, price DECIMAL(10,2), order_date TIMESTAMP);"
      ],
      "SampleUsers": [
        {
          "id": "user1",
          "name": "John Doe",
          "email": "john.doe@example.com",
          "age": 30,
          "created_at": "2024-01-01T00:00:00Z"
        }
      ]
    }
  },
  "ConnectorConfigs": {
    "MongoDB": {
      "connector.class": "Kafka.Connect.MongoDb",
      "tasks.max": "1",
      "topics": "mongodb-source-topic",
      "connection.uri": "mongodb://testuser:testpass@localhost:27017/integration_testdb?authSource=admin",
      "database": "integration_testdb",
      "collection": "integration_test_collection",
      "batch.size": "100",
      "poll.interval.ms": "1000",
      "copy.existing": "true"
    },
    "PostgreSQL": {
      "connector.class": "Kafka.Connect.Postgres",
      "tasks.max": "1",
      "topics": "postgres-source-topic",
      "connection.url": "Host=localhost;Port=5432;Database=testdb;Username=testuser;Password=testpass",
      "table.whitelist": "integration_test.integration_users",
      "mode": "incrementing",
      "incrementing.column.name": "id",
      "poll.interval.ms": "1000"
    },
    "MySQL": {
      "connector.class": "Kafka.Connect.MySql",
      "tasks.max": "1",
      "topics": "mysql-source-topic",
      "connection.url": "Server=localhost;Port=3306;Database=integration_testdb;Uid=testuser;Pwd=testpass",
      "table.whitelist": "integration_users",
      "mode": "incrementing",
      "incrementing.column.name": "id",
      "poll.interval.ms": "1000"
    }
  }
}